# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
  tags:
    include:
    - v*

pr:
  - none

pool:
  vmImage: 'macos-latest'

steps:
# Finds or downloads and caches the specified version spec of Node.js and adds it to the PATH
- task: NodeTool@0
  inputs:
    versionSpec: '10.19.0'

- script: npm install -g cordova@9.0.0
  displayName: Install latest cordova

- script: npm install 
  displayName: Install dependencies

- script: mkdir www 
  displayName: Making cordova based project

- script: cordova prepare
  displayName: Installing cordova plugins

- script: cp $(System.DefaultWorkingDirectory)/overrides/@types/jsforce/date-enum.d.ts $(System.DefaultWorkingDirectory)/node_modules/@types/jsforce/date-enum.d.ts
  displayName: Adding SfDate interface definitions  

- script: cp $(System.DefaultWorkingDirectory)/overrides/jsforce/lib/browser/request.js $(System.DefaultWorkingDirectory)/node_modules/jsforce/lib/browser/request.js
- script: cp overrides/jsforce/lib/soql-builder.js node_modules/jsforce/lib/soql-builder.js

- script: cp $(System.DefaultWorkingDirectory)/overrides/react-data-export/dist/ExcelPlugin/components/ExcelFile.js $(System.DefaultWorkingDirectory)/node_modules/react-data-export/dist/ExcelPlugin/components/ExcelFile.js
  displayName: Overriding excel plugin files

- script: cp $(System.DefaultWorkingDirectory)/overrides/platforms/android/app/build.gradle $(System.DefaultWorkingDirectory)/platforms/android/app/build.gradle
  displayName: Overriding app gradle

- script: cp -R $(System.DefaultWorkingDirectory)/platforms/browser/platform_www/plugins $(System.DefaultWorkingDirectory)/www/
- script: cp $(System.DefaultWorkingDirectory)/platforms/browser/platform_www/cordova_plugins.js $(System.DefaultWorkingDirectory)/www/
- script: cp $(System.DefaultWorkingDirectory)/platforms/browser/platform_www/cordova.js $(System.DefaultWorkingDirectory)/www/

- script: npm run build-full-all-Mac
  displayName: Building full apk

- script: npm run build-production-all-Mac
  displayName: Building production apk

- task: CopyFiles@2
  displayName: Copy deployment script for firebase
  inputs:
    contents: '*.sh'
    sourceFolder: '$(System.DefaultWorkingDirectory)/azure/deploy/firebase'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
- task: CopyFiles@2
  displayName: Copy QA release APK to staging directory
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/kone_smt_releases'
    Contents: |
      full/*.apk
    TargetFolder: '$(Build.ArtifactStagingDirectory)/qa'
    flattenFolders: true

- task: CopyFiles@2
  displayName: Copy Production release APK to staging directory
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/kone_smt_releases'
    Contents: |
      prod/*.apk
    TargetFolder: '$(Build.ArtifactStagingDirectory)/production'
    flattenFolders: true


# Publish the artifacts and make available for download
- task: PublishBuildArtifacts@1
  displayName: Publish artifacts
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'outputs' 